#Problem 1

CREATE TABLE passports
(
passport INT NOT NULL AUTO_INCREMENT,
passport_number VARCHAR(50) UNIQUE NOT NULL ,
PRIMARY KEY(passport)
) AUTO_INCREMENT = 101;

INSERT INTO passports(passport_number) 
	VALUES('N34FG21B'),('K65LO4R7'),('ZE657QP2');

CREATE TABLE persons 
(
person_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
first_name varchar(50),
salary DOUBLE(13,2) NOT NULL,
passport_id INT NOT NULL,
FOREIGN KEY(passport_id) REFERENCES passports(passport)
);

INSERT INTO persons(first_name,salary,passport_id)
	VALUES('Roberto',43300.00,102),('Tom',56100.00,103),('Yana',60200.00,101)
  
#Problem 2
 
CREATE TABLE manufacturers
(
manufacturer_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL ,
established_on datetime 
);

CREATE TABLE models 
(
model_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL ,
manufacturer_id INT NOT NULL,
FOREIGN KEY(manufacturer_id) REFERENCES manufacturers(manufacturer_id)
) AUTO_INCREMENT = 101;

INSERT INTO manufacturers(name,established_on)
VALUES('BMW','1916-03-01'),('Tesla','2003-01-01'),('Lada','1966-05-01');

INSERT INTO models(name,manufacturer_id)
VALUES('X1',1),('i6',1),('Model S',2),('Model X',2),('Model 3',2),('Nova',3);

#Problem 3

CREATE TABLE students
(
student_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL
);

CREATE TABLE exams
(
exam_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL
) AUTO_INCREMENT = 101;

CREATE TABLE students_exams
(
student_id INT NOT NULL,
exam_id INT NOT NULL,
FOREIGN KEY(exam_id) REFERENCES exams(exam_id),
FOREIGN KEY(student_id) REFERENCES students(student_id),
UNIQUE(student_id,exam_id)
);


INSERT INTO students(name) VALUES('Mila'),('Toni'),('Ron');

INSERT INTO exams(name) VALUES('Spring MVC'),('Neo4j'),('Oracle 11g');

INSERT INTO students_exams(student_id,exam_id)
VALUES(1,101),(1,102),(2,101),(3,103),(2,102),(2,103);

#Problem 4

CREATE TABLE teachers
(
teacher_id INT NOT NULL PRIMARY KEY,
name VARCHAR(50),
manager_id INT,
FOREIGN KEY(manager_id) REFERENCES teachers(teacher_id)
);

INSERT INTO teachers(teacher_id,name) 
VALUES (101,'John');
INSERT INTO teachers(teacher_id,name,manager_id)
VALUES
(105,'Mark',101),
(106,'Greta',101),
(102,'Maya',106),
(103,'Silvia',106),
(104,'Ted',105);

#Problem 5

CREATE TABLE item_types
(
item_type_id INT NOT NULL PRIMARY KEY,
name VARCHAR(50)
);

CREATE TABLE cities
(
city_id INT NOT NULL PRIMARY KEY,
name VARCHAR(50)
);

CREATE TABLE items
(
item_id INT NOT NULL PRIMARY KEY,
name VARCHAR(50),
item_type_id INT NOT NULL,
FOREIGN KEY (item_type_id) REFERENCES item_types(item_type_id)
);

CREATE TABLE customers
(
customer_id INT NOT NULL PRIMARY KEY,
name VARCHAR(50),
birthday DATE NOT NULL,
city_id INT NOT NULL,
FOREIGN KEY (city_id) REFERENCES cities(city_id)
);

CREATE TABLE orders
(
order_id INT NOT NULL PRIMARY KEY,
customer_id INT NOT NULL,
FOREIGN KEY(customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE order_items
(
order_id INT NOT NULL,
item_id INT NOT NULL,
UNIQUE(order_id,item_id),
FOREIGN KEY(item_id) REFERENCES items(item_id),
FOREIGN KEY(order_id) REFERENCES orders(order_id)
);

#Problem 6

CREATE TABLE majors
(
major_id INT NOT NULL PRIMARY KEY,
name VARCHAR(50)
);

CREATE TABLE subjects
(
subject_id INT NOT NULL PRIMARY KEY,
subject_name VARCHAR(50)
);

CREATE TABLE students
(
student_id INT NOT NULL PRIMARY KEY,
student_number VARCHAR(12),
student_name VARCHAR(50),
major_id INT NOT NULL,
FOREIGN KEY(major_id) REFERENCES majors(major_id)
);

CREATE TABLE agenda
(
student_id INT NOT NULL,
subject_id INT NOT NULL,
FOREIGN KEY(student_id) REFERENCES students(student_id),
FOREIGN KEY(subject_id) REFERENCES subjects(subject_id),
UNIQUE(student_id, subject_id)
);

CREATE TABLE payments
(
payment_id INT(11) NOT NULL PRIMARY KEY,
payment_date DATE,
payment_amount DECIMAL(8,2),
student_id INT(11) NOT NULL,
FOREIGN KEY(student_id) REFERENCES students(student_id)
);

#Problem 9

