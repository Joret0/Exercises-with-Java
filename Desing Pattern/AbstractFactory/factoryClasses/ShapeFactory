package AbstractFactory.factoryClasses;

import AbstractFactory.classes.Circle1;
import AbstractFactory.classes.Rectangle1;
import AbstractFactory.classes.Square1;
import AbstractFactory.interfaces.Color;
import AbstractFactory.interfaces.Shape1;

public class ShapeFactory extends AbstractFactory {

    @Override
    public Color getColor(String color) {
        return null;
    }

    @Override
    public Shape1 getShape(String shapeType) {

        if (shapeType == null) {
            return null;
        }

        if (shapeType.equalsIgnoreCase("CIRCLE")) {
            return new Circle1();
        } else if (shapeType.equalsIgnoreCase("RECTANGLE")) {
            return new Rectangle1();
        } else if (shapeType.equalsIgnoreCase("SQUARE")) {
            return new Square1();
        }
        return null;
    }
}
